name: Terraform CI

on:
  push:
    branches: ["master"]
    paths:
      - 'terraform/modules/test/**/*.tf'
      - '.github/workflows/**'
      - '.github/.checkov.yaml'
  pull_request:
    branches: ["master", "dev", "feature-*"]
    paths:
      - 'terraform/modules/test/**/*.tf'
      - '.github/workflows/**'
      - '.github/.checkov.yaml'
      
permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: dev
    
    defaults:
      run:
        shell: bash
        # Set the working directory specifically to the test module
        working-directory: ./terraform/modules/test

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.7

    # Configure AWS credentials for Terraform operations
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_GITHUB_CI_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_GITHUB_CI_SECRET_KEY }}
        aws-region: eu-west-2

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    - name: Terraform Format
      run: terraform fmt -recursive

    - name: Terraform Format Check
      run: terraform fmt -check -recursive

    - name: Terraform Validate
      run: terraform validate

    # Run tflint for additional linting
    - name: Setup TFLint
      uses: terraform-linters/setup-tflint@v3
      with:
        tflint_version: v0.46.1

    - name: Run TFLint
      run: |
        tflint --init
        tflint --format=compact

    # Run Checkov security scan with custom config
    - name: Checkov Security Scan
      uses: bridgecrewio/checkov-action@master
      with:
        directory: ./terraform/modules/test
        config_file: .github/.checkov.yaml
        soft_fail: true  # Set to false to make the build fail if checks don't pass
        framework: terraform
        output_format: github_failed_only
        download_external_modules: true

    - name: Terraform Plan
      run: terraform plan -input=false
      